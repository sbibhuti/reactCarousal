{"version":3,"sources":["component/images.js","component/pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Images","images","loading","useState","current","setCurrent","length","Array","isArray","className","id","class","map","image","index","src","download_url","alt","type","onClick","Pagination","imagesPerPage","totalImages","paginate","pageNumbers","i","Math","ceil","push","number","href","App","setImages","setLoading","currentPage","setCurrentPage","useEffect","a","axios","get","res","data","fetchImages","indexOfLastImage","indexOfFirstImage","currentImages","slice","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAiFeA,EA/EA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAASL,EAAOK,OAUtB,OAAKC,MAAMC,QAAQP,IAAWA,EAAOK,QAAU,EACtC,KAGLJ,EACK,4CAIP,qBAAKO,UAAU,uBAAf,SACE,sBACEC,GAAG,0BACHC,MAAM,iBACN,eAAa,WAHf,UAKE,qBAAKA,MAAM,iBAAX,SACGV,EAAOW,KAAI,SAACC,EAAOC,GAClB,OACE,qBACEL,UACEK,IAAUV,EAAU,uBAAyB,gBAFjD,SAMGU,IAAUV,GACT,qBAEEK,UAAU,gBACVM,IAAKF,EAAMG,aACXC,IAAI,eAHCJ,EAAMH,KAJVI,QAcb,yBACEL,UAAU,wBACVS,KAAK,SACL,iBAAe,2BACf,gBAAc,OACdC,QA7CU,WAChBd,EAAuB,IAAZD,EAAgBE,EAAS,EAAIF,EAAU,IAuC9C,UAOE,sBACEK,UAAU,6BACV,cAAY,SAEd,sBAAMA,UAAU,kBAAhB,yBAEF,yBACEA,UAAU,wBACVS,KAAK,SACL,iBAAe,2BACf,gBAAc,OACdC,QA9DU,WAChBd,EAAWD,IAAYE,EAAS,EAAI,EAAIF,EAAU,IAwD9C,UAOE,sBACEK,UAAU,6BACV,cAAY,SAEd,sBAAMA,UAAU,kBAAhB,2BChDKW,EAxBI,SAAC,GAGlB,IAHgE,IAA5CC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC1CC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAcD,GAAgBI,IAC3DD,EAAYI,KAAKH,GAKnB,OACE,8BACE,oBAAIhB,UAAU,aAAd,SACGe,EAAYZ,KAAI,SAAAiB,GAAM,OACrB,oBAAiBpB,UAAU,YAA3B,SACE,mBAAGU,QAAS,kBAAMI,EAASM,IAASC,KAAK,KAAKrB,UAAU,YAAxD,SACGoB,KAFIA,W,iBC+BJE,G,YAvCH,WACV,MAA4B5B,mBAAS,IAArC,mBAAOF,EAAP,KAAe+B,EAAf,KACA,EAA8B7B,oBAAS,GAAvC,mBAAOD,EAAP,KAAgB+B,EAAhB,KACA,EAAsC9B,mBAAS,GAA/C,mBAAO+B,EAAP,KAAoBC,EAApB,KACA,EAAwBhC,mBAAS,GAA1BkB,EAAP,oBAEAe,qBAAU,YACS,uCAAG,4BAAAC,EAAA,6DAClBJ,GAAW,GADO,SAEAK,IAAMC,IAAI,iCAFV,OAEZC,EAFY,OAGlBR,EAAUQ,EAAIC,MACdR,GAAW,GAJO,2CAAH,qDAOjBS,KACC,IAGH,IAAMC,EAAmBT,EAAcb,EACjCuB,EAAoBD,EAAmBtB,EACvCwB,EAAgB5C,EAAO6C,MAAMF,EAAmBD,GAKtD,OACE,sBAAKlC,UAAU,iBAAf,UACE,cAAC,EAAD,CAAQR,OAAQ4C,EAAe3C,QAASA,IACxC,qBAAKS,MAAM,mDAAX,SACE,cAAC,EAAD,CACEU,cAAeA,EACfC,YAAarB,EAAOK,OACpBiB,SATS,SAACwB,GAAD,OAAgBZ,EAAeY,aClBnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f8548e69.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Images = ({ images, loading }) => {\r\n  const [current, setCurrent] = useState(0);\r\n  const length = images.length;\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n  };\r\n\r\n  if (!Array.isArray(images) || images.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid mb-3\">\r\n      <div\r\n        id=\"carouselExampleControls\"\r\n        class=\"carousel slide\"\r\n        data-bs-ride=\"carousel\"\r\n      >\r\n        <div class=\"carousel-inner\">\r\n          {images.map((image, index) => {\r\n            return (\r\n              <div\r\n                className={\r\n                  index === current ? \"carousel-item active\" : \"carousel-item\"\r\n                }\r\n                key={index}\r\n              >\r\n                {index === current && (\r\n                  <img\r\n                    key={image.id}\r\n                    className=\"d-block w-100\"\r\n                    src={image.download_url}\r\n                    alt=\"Third slide\"\r\n                  />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <button\r\n          className=\"carousel-control-prev\"\r\n          type=\"button\"\r\n          data-bs-target=\"#carouselExampleControls\"\r\n          data-bs-slide=\"prev\"\r\n          onClick={prevSlide}\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"visually-hidden\">Previous</span>\r\n        </button>\r\n        <button\r\n          className=\"carousel-control-next\"\r\n          type=\"button\"\r\n          data-bs-target=\"#carouselExampleControls\"\r\n          data-bs-slide=\"next\"\r\n          onClick={nextSlide}\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"visually-hidden\">Next</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Images;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ imagesPerPage, totalImages, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalImages / imagesPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n \r\n  \r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport Images from \"./component/images\";\nimport Pagination from \"./component/pagination\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [imagesPerPage] = useState(5);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://picsum.photos/v2/list\");\n      setImages(res.data);\n      setLoading(false);\n    };\n\n    fetchImages();\n  }, []);\n\n  // Get current posts\n  const indexOfLastImage = currentPage * imagesPerPage;\n  const indexOfFirstImage = indexOfLastImage - imagesPerPage;\n  const currentImages = images.slice(indexOfFirstImage, indexOfLastImage);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container mt-5\">\n      <Images images={currentImages} loading={loading} />\n      <div class=\"position-absolute mt-5 start-50 translate-middle\">\n        <Pagination\n          imagesPerPage={imagesPerPage}\n          totalImages={images.length}\n          paginate={paginate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}